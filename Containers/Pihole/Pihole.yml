---
- name: Pull an image {{ item }}
  containers.podman.podman_image:
    name: docker.io/pihole/pihole:latest

- name: Make "{{ item }}" Systemd service
  copy:
    dest: "/etc/systemd/system/container-{{ item }}.service"
    content: |
      [Unit]
      Description={{ item }} container
      After=network-online.target
      Wants=network-online.target

      [Service]
      TimeoutStartSec=0
      ExecStartPre=-/usr/bin/podman kill {{ item }}
      ExecStartPre=-/usr/bin/podman rm {{ item }}
      ExecStartPre=-/usr/bin/podman pull docker.io/pihole/pihole:latest
      ExecStart=/usr/bin/podman run \
      --name {{ item }} \
      --cap-add=NET_ADMIN \
      -e DNSSEC=true \
      -e CONDITIONAL_FORWARDING=true \
      -e CONDITIONAL_FORWARDING_IP=192.168.10.254 \
      -e CONDITIONAL_FORWARDING_DOMAIN=shed.lan \
      -v {{ ContainerData }}/{{ item }}/config/:/etc/pihole/ \
      -v {{ ContainerData }}/{{ item }}/dnsmasq/:/etc/dnsmasq.d/ \
      -e TZ={{ TimeZone }} \
      --net=host \
      docker.io/pihole/pihole:latest

      ExecStop=/usr/bin/podman stop {{ item }}

      [Install]
      WantedBy=multi-user.target
  register: State

- name: reload systemd
  command: >-
    systemctl daemon-reload
  when: State.changed == true


- name: Pause for 10 seconds to start app
  pause:
    seconds: 10
  when: State.changed == true

- name: restart "{{ item }}" service if changed
  ansible.builtin.systemd:
    state: restarted
    enabled: yes
    name: "container-{{ item }}"
  when: State.changed == true

- name: Start "{{ item }}" service
  ansible.builtin.systemd:
    state: started
    enabled: yes
    name: "container-{{ item }}"
  when: State.changed == false
